/** Construct RetxGenerator from RetxPolicy. */
export function makeRetxGenerator(policy) {
    if (!policy) {
        return () => [];
    }
    if (typeof policy === "number") {
        return makeRetxGenerator({ limit: policy });
    }
    if (typeof policy === "function") {
        return policy;
    }
    return function* (interestLifetime) {
        const { limit = 0, interval = interestLifetime * 0.5, randomize = 0.1, backoff = 1, max = interestLifetime * 0.9, } = policy;
        let nextInterval = interval;
        for (let i = 0; i < limit; ++i) {
            yield nextInterval * (1 - randomize + Math.random() * 2 * randomize);
            nextInterval = Math.min(nextInterval * backoff, max);
        }
    };
}
