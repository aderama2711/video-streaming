import { type Decoder, Encoder } from "@ndn/tlv";
import { type NameLike, Name } from "./name/mod";
/** ForwardingHint in Interest. */
export declare class FwHint {
    static decodeValue(vd: Decoder): FwHint;
    constructor(copy?: FwHint);
    constructor(name: NameLike);
    constructor(delegations: readonly NameLike[]);
    delegations: Name[];
    encodeTo(encoder: Encoder): void;
}
export declare namespace FwHint {
    /**
     * ForwardingHint encoding format.
     * 2017: ForwardingHint = T L 1*Delegation, Delegation = T L Preference Name
     * 2021: ForwardingHint = T L 1*Name
     */
    type EncodeFormat = 2017 | 2021;
    let encodeFormat: FwHint.EncodeFormat;
    function withEncodeFormat(format: EncodeFormat, cb: () => void): void;
}
