/* eslint-env browser */
import { getMaxChunkSize, KnownSizeChunkSource } from "./common_browser.js";
function readBlobAsBuffer(blob) {
    return blob.arrayBuffer();
}
function readBlobFileReader(blob) {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsArrayBuffer(blob);
        reader.addEventListener("load", () => {
            const buffer = reader.result;
            resolve(buffer);
        });
        reader.addEventListener("error", () => {
            reject(reader.error);
        });
    });
}
/** Generate chunks from a Blob (from W3C File API, browser only). */
export class BlobChunkSource extends KnownSizeChunkSource {
    constructor(blob, opts = {}) {
        super(getMaxChunkSize(opts), blob.size);
        this.blob = blob;
        this.readBlob = typeof blob.arrayBuffer === "function" ? readBlobAsBuffer : readBlobFileReader;
    }
    async getPayload(i, offset, chunkSize) {
        const sliced = this.blob.slice(offset, offset + chunkSize);
        const buffer = await this.readBlob(sliced);
        return new Uint8Array(buffer);
    }
}
