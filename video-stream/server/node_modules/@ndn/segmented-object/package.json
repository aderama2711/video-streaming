{
  "name": "@ndn/segmented-object",
  "version": "0.0.20220309-nightly-b7077af",
  "description": "NDNts: Segmented Object",
  "keywords": [
    "NDN",
    "Named Data Networking"
  ],
  "author": "Junxiao Shi <npm@mail1.yoursunny.com>",
  "license": "ISC",
  "files": [
    "lib"
  ],
  "type": "module",
  "main": "lib/mod_node.js",
  "module": "lib/mod_browser.js",
  "sideEffects": false,
  "homepage": "https://yoursunny.com/p/NDNts/",
  "repository": {
    "type": "git",
    "url": "https://github.com/yoursunny/NDNts.git",
    "directory": "packages/segmented-object"
  },
  "dependencies": {
    "@ndn/endpoint": "https://ndnts-nightly.ndn.today/endpoint.tgz",
    "@ndn/fw": "https://ndnts-nightly.ndn.today/fw.tgz",
    "@ndn/naming-convention2": "https://ndnts-nightly.ndn.today/naming-convention2.tgz",
    "@ndn/packet": "https://ndnts-nightly.ndn.today/packet.tgz",
    "@ndn/util": "https://ndnts-nightly.ndn.today/util.tgz",
    "event-iterator": "^2.0.0",
    "graceful-fs": "^4.2.9",
    "hirestime": "^6.1.0",
    "is-stream": "^2.0.1",
    "mnemonist": "^0.39.0",
    "p-defer": "^3.0.0",
    "p-lazy": "^3.1.0",
    "streaming-iterables": "^6.2.0",
    "tslib": "^2.3.1",
    "typed-emitter": "^2.1.0"
  },
  "types": "lib/mod.d.ts",
  "readme": "# @ndn/segmented-object\n\nThis package is part of [NDNts](https://yoursunny.com/p/NDNts/), Named Data Networking libraries for the modern web.\n\nThis package implements functions to publish and retrieve segmented objects.\n`@ndn/cat` package is a command line program that uses this package, and serves as an example.\n\nThe consumer functionality:\n\n* [X] supports version discovery via CanBePrefix.\n* [X] supports version discovery via RDR protocol (in `@ndn/rdr` package).\n* [ ] supports manifest.\n* [X] allows specifying segment range.\n* [X] supports segment numbers.\n* [ ] supports byte offsets.\n* [X] supports multiple naming conventions.\n* [X] has Interest pipelining, congestion control, and loss recovery.\n* [X] verifies packets with a `Verifier` (fixed key or trust schema).\n* [X] emits events as segments arrive.\n* [X] outputs in-order data chunks as a readable stream.\n* [X] outputs completely reassembled object via Promise.\n\nThe producer functionality:\n\n* [X] takes input from `Uint8Array`.\n* [X] takes input from readable streams.\n* [X] takes input from files (filename in Node.js, `Blob` in browser).\n* [X] generates segments of fixed size.\n* [ ] generates segments of available data as Interest arrives, to minimize delivery latency.\n* [X] responds to version discovery Interests with CanBePrefix.\n* [X] responds to RDR protocol (in `@ndn/rdr` package).\n* [ ] generates manifest.\n* [X] supports segment numbers.\n* [ ] supports byte offsets.\n* [X] supports multiple naming conventions.\n* [X] signs packets with a `Signer` (fixed key or trust schema).\n* [ ] reports when all segments have been retrieved at least once.\n"
}