"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hiresTimeBrowserDate = exports.hiresTimeBrowserPerformance = exports.hirestimeNode = void 0;
const round = (number) => Number(number.toFixed(2));
const getElapsor = (startTime, getTime) => {
    const elapsor = () => round(getTime());
    elapsor.startedAt = () => startTime;
    elapsor.seconds = elapsor.s = () => round(getTime() / 1e3);
    elapsor.milliseconds = elapsor.ms = () => round(getTime());
    elapsor.microseconds = elapsor.us = () => round(getTime() * 1e3);
    elapsor.nanoseconds = elapsor.ns = () => round(getTime() * 1e6);
    return elapsor;
};
const hrTimeToMillis = (hrtime) => hrtime[0] * 1e3 + hrtime[1] / 1e6;
exports.hirestimeNode = () => {
    const start = process.hrtime();
    return getElapsor(hrTimeToMillis(start), () => hrTimeToMillis(process.hrtime(start)));
};
exports.hiresTimeBrowserPerformance = () => {
    const start = window.performance.now();
    return getElapsor(start, () => window.performance.now() - start);
};
exports.hiresTimeBrowserDate = () => {
    const start = Date.now();
    return getElapsor(start, () => Date.now() - start);
};
const isRunningInNode = () => typeof process !== "undefined" && process.hrtime;
const isRunningInBrowser = () => typeof window !== "undefined" && window.performance;
const hirestime = isRunningInNode() ? exports.hirestimeNode :
    isRunningInBrowser() ? exports.hiresTimeBrowserPerformance :
        exports.hiresTimeBrowserDate;
exports.default = hirestime;
//# sourceMappingURL=index.js.map